<Window x:Class="Pilkarze_MVVM.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pilkarze_MVVM"
        xmlns:vm="clr-namespace:Pilkarze_MVVM.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Title="Drużyna" Height="450" Width="800">
    <Window.DataContext>
        <vm:PilkarzeViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style TargetType="TextBox" x:Key="Wzor">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="true">
                    <Setter Property="BorderBrush" Value="Black"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="TextBox" x:Key="imie" BasedOn="{StaticResource Wzor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Imie}" Value=""/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=IsFocused}" Value="false"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="BorderThickness" Value="2.3"/>
                        <Setter Property="ToolTip" Value="Proszę podać imię!"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Imie}" Value="Wprowadź imię">
                    <Setter Property="Foreground" Value="DarkGray"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBox" x:Key="nazwisko" BasedOn="{StaticResource Wzor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Nazwisko}" Value=""/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Setter Property="BorderThickness" Value="2.3"/>
                        <Setter Property="ToolTip" Value="Proszę podać nazwisko!"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Nazwisko}" Value="Wprowadź nazwisko">
                    <Setter Property="Foreground" Value="DarkGray"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding Zapis}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.7*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.8*"/>
                <RowDefinition Height="0.8*"/>
                <RowDefinition Height="0.8*"/>
                <RowDefinition Height="0.8*"/>
                <RowDefinition Height="4*"/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="Imię:" Margin="0,10,0,0"/>
            <Label Grid.Row="1" Content="Nazwisko:" Margin="0,10,0,0"/>
            <Label Grid.Row="2" Content="Wiek:" Margin="0,10,0,0"/>
            <Label Grid.Row="3" Content="Waga:" Margin="0,10,0,0"/>
            <TextBox x:Name="imie" Grid.Row="0" Margin="100,12,100,10"  Style="{DynamicResource imie}" Text="{Binding Imie,UpdateSourceTrigger=PropertyChanged}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding WyczyscImie}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBox x:Name="nazwisko" Grid.Row="1" Margin="100,12,100,10" Style="{DynamicResource nazwisko}" Text="{Binding Nazwisko,UpdateSourceTrigger=PropertyChanged}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="GotFocus">
                        <i:InvokeCommandAction Command="{Binding WyczyscNazwisko}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <ComboBox x:Name="wiek_cb" Grid.Row="2" Margin="100,12,190,10" ItemsSource="{Binding WiekLista}" SelectedItem="{Binding Wiek}" Text="{Binding Wiek}" />
            <Slider x:Name="waga_sl" Grid.Row="3" VerticalAlignment="Center" Margin="100,0,70,0" Minimum="55" Maximum="110" TickFrequency="0.1" IsSnapToTickEnabled="True" Value="{Binding Waga}"/>
            <TextBox x:Name="waga_tb" Grid.Row="3" VerticalAlignment="Center" Margin="294,14,9,10" Text="{Binding ElementName=waga_sl, Path=Value}" Height="23" BorderThickness="0"/>
            <TextBox x:Name="waga2_tb" Grid.Row="3" VerticalAlignment="Center" Margin="324,14,10,15" Text="kg" Height="18" BorderThickness="0" HorizontalAlignment="Right"/>
            <Button x:Name="dodaj_bt" Grid.Row="4" Height="35" VerticalAlignment="Top" Margin="132,10,144,0" Content="Dodaj" FontSize="18" VerticalContentAlignment="Center" Command="{Binding Dodaj}"/>
            <Button x:Name="usun_bt" Grid.Row="4" Height="33" VerticalAlignment="Top" Margin="132,69,144,0" Content="Usuń" FontSize="18" VerticalContentAlignment="Center" Command="{Binding Usuń}"/>
            <Button x:Name="modyfikuj_bt" Grid.Row="4" Height="35" VerticalAlignment="Top" Margin="132,123,144,0" Content="Modyfikuj" FontSize="18" VerticalContentAlignment="Center" Command="{Binding Edytuj}"/>

        </Grid>
        <ListBox x:Name="lb_pilkarze" Grid.Row="0" Grid.Column="1" Margin="10" FontSize="20" ItemsSource="{Binding ListaPilkarzy}" SelectedIndex="{Binding Id}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding Wczyt}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>

    </Grid>
</Window>
